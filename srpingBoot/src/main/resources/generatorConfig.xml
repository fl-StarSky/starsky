<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration  
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"  
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"> 
<!-- 根节点 -->
<generatorConfiguration>
    <!-- 导入属性配置，0或1个 -->
    <!-- <properties resource="application.yml"/> -->
    <!-- 指定特定数据库的jdbc驱动jar包（ mysql-connector-java-8.0.11.jar）所在的位置，0或多个-->
    <classPathEntry location="C:\Users\11009702\.m2\repository\mysql\mysql-connector-java\8.0.11\mysql-connector-java-8.0.11.jar"/>
    <!-- 1或多个
         defaultModelType:定义mybatis generator如何生成实体类
         targetRuntime：用于指定生成的代码的运行环境，默认MyBatis3。
     -->
    <context id="mysqlTables" targetRuntime="MyBatis3" defaultModelType="flat">
    
        <commentGenerator>
            <!-- 这个元素用来去除指定生成的注释中是否包含生成的日期 false:表示保护 -->
            <!-- 如果生成日期，会造成即使修改一个字段，整个实体类所有属性都会发生变化，不利于版本控制，所以设置为true -->
            <property name="suppressDate" value="false"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 连接数据库 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/yiibaidb?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8" userId="root" password="123=123" />
        <!-- <jdbcConnection driverClass="${spring.datasource.driver-class-name}" connectionURL="${spring.datasource.url}" userId="${spring.datasource.username}" password="${spring.datasource.password}" /> -->
        
        <!--非必需，类型处理器，指定生成的类型为java类型，避免数据库中number等类型字段 -->
        <javaTypeResolver>
            <property name ="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- model模型生成器，用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage   指定生成的model所在包目录 
        	targetProject   指定在该项目下所在的路径  -->
        <!--自动生成的model实体的存放包路径 -->
        <javaModelGenerator targetPackage="com.example.srpingBoot.order.model" targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true" />
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>
        
        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <!--自动生成的*Mapper.xml文件存放路径 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>
        
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <!--自动生成的*Mapper.java存放路径 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.srpingBoot.order.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>
        
        <!-- 
                        要生成的表 
            tableName是数据库中的表名或视图名 
            domainObjectName是实体类名，未指定的话会根据tableName自动生成名称
            mapperName是Mapper.java和Mapper.xml的名称，未指定的话会根据tableName自动生成名称
            enableInsert表示是否生成insert语句，默认true
            enableSelectByPrimaryKey表示是否生成selectByPrimaryKey语句。如果表没有主键，则不会生成语句。默认true
            enableSelectByExample表示是否生成selectByExample语句。此语句允许在运行时生成许多不同的动态查询。默认true。
            enableUpdateByPrimaryKey表示是否生成UpdateByPrimaryKey。无论此设置如何，如果表没有主键，则不会生成语句。默认true。
            enableDeleteByPrimaryKey表示是否生成DeleteByPrimaryKey。无论此设置如何，如果表没有主键，则不会生成语句。默认true。
            enableDeleteByExample表示是否生成DeleteByExample语句。此语句允许在运行时生成许多不同的动态删除。默认true。
            enableCountByExample表示是否生成CountByExample语句。此语句将返回表中与示例匹配的行数。默认true。
            enableUpdateByExample表示是UpdateByExample。此语句将更新表中与示例匹配的行。如果为true，则还将生成示例“selective”语句的更新。“selective”语句仅更新record参数中的相应值为非null的列。默认true。
            selectByPrimaryKeyQueryId此值将以此形式添加到select by primary key语句的选择列表中：“'<value>'作为QUERYID”。这对于在运行时识别DBA跟踪工具中的查询非常有用。如果使用这样的值，则应为MBG生成的每个不同查询指定唯一ID。
        -->
        <table tableName="orders"
            domainObjectName="Orders" enableCountByExample="false" enableUpdateByExample="false"
            enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"
            mapperName="OrdersMapper">
        </table>
    </context>
</generatorConfiguration>